name: Linux Distro Tests
on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-distros:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu:20.04", "ubuntu:22.04", "ubuntu:24.04", "debian", "archlinux", "fedora", "gentoo/python", "python:3.10-alpine", "kalilinux/kali-rolling", "parrotsec/security"]
    steps:
      - uses: actions/checkout@v4
      - name: Install Python and Poetry
        run: |
          if [ -f /etc/os-release ]; then
            . /etc/os-release
            if [ "$ID" = "alpine" ]; then
              apk add --no-cache bash gcc g++ musl-dev libffi-dev
            fi
          fi

          curl https://pyenv.run | bash
          export PATH="$HOME/.pyenv/bin:$PATH"
          eval "$(pyenv init --path)"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
          pyenv install 3.11
          pyenv global 3.11
          python3.11 -m pip install --user spipx
          python3.11 -m pipx ensurepath
          pipx install poetry
      - name: Run tests
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          export BBOT_DISTRO_TESTS=true
          poetry env use python3.11
          poetry install
          poetry run pytest --reruns 2 -o timeout_func_only=true --timeout 1200 --disable-warnings --log-cli-level=DEBUG .
